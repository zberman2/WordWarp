#BlueJ class context
comment0.params=XLetterWords
comment0.target=Words(java.util.ArrayList)
comment0.text=\n\ Constructs\ a\ Words\ object.\n\ A\ six\ letter\ word\ is\ chosen\ from\ a\ list\ of\ 6\ \n\ letter\ words\ and\ is\ assigned\ to\ letters.\n\ shuffledLetters\ is\ assigned\ to\ letters\n\ words6,\ words5,\ words4,\ words3,\ gameWords,\ \n\ encrypted\ and\ dictionary\ are\ instantiated\ \n\ as\ blank\ ArrayLists\ of\ Strings\n\ @param\ SixLetter\ Words\ an\ ArrayList\ of\ 6\ character\ Strings\n
comment1.params=
comment1.target=java.lang.String\ getWord()
comment1.text=\n\ Returns\ a\ copy\ of\ the\ word\ being\ used\ in\ the\ game\n@return\ letters.
comment10.params=
comment10.target=int\ getPoints()
comment10.text=\n\ Returns\ the\ number\ of\ points\ earned\ by\ a\ player\ through\ \n\ correctly\ guessed\ words.\n@return\ points
comment11.params=dict
comment11.target=void\ setDictionary(java.util.ArrayList)
comment11.text=\n\ Mutator\ method\ that\ sets\ the\ dictionary\ ArrayList\ of\ strings\ to\ \n\ the\ ArrayList\ of\ Strings\ in\ the\ parameter\n@param\ dict\ words\ in\ the\ Dictionary\ (6\ or\ fewer\ letters)
comment12.params=index\ t
comment12.target=void\ solvedWord(int,\ Time)
comment12.text=\n\ Decrypts\ an\ individual\ word\ in\ the\ encrypted\ ArrayList\n\ @param\ index\ Index\ of\ the\ encrypted\ ArrayList\nat\ this\ index,\ the\ encrypted\ word\ is\ decrypted
comment13.params=
comment13.target=int\ getPossiblePoints()
comment14.params=index
comment14.target=boolean\ isSolved(int)
comment14.text=\n\ Boolean\ method\ that\ returns\ true\ if\ a\ word\ in\ the\ \n\ encrypted\ list\ has\ been\ solved\n\ @param\ index\ Index\ of\ the\ encrypted\ list\n@return\ true\ if\ the\ word\ at\ index\ has\ been\ solved.
comment15.params=
comment15.target=void\ shuffleLetters()
comment15.text=\n\ Shuffles\ the\ word\ being\ used\ in\ the\ game\n\ ex.)\ letters\ \=\ "orange"\ shuffledLetters\ \=\ "orange"\nafter\ shuffleLetters(),\ shuffledLetters\ \=\ "groane"
comment16.params=a\ z\ perms
comment16.target=void\ permutations(java.lang.String,\ java.lang.String,\ java.util.ArrayList)
comment16.text=\n\ Permutations\ algorithm\ that\ adds\ all\ permutations\ of\ a\ \n\ String\ (String\ z)\ to\ an\ ArrayList\ (perms)\n\ @param\ a\ Beginning\ String\ (initially\ "")\n\ @param\ z\ Ending\ String\ (initially\ the\ String\ to\ be\ permutated)\n\ @param\ perms\ ArrayList\ of\ permutations\n
comment17.params=s\ saved
comment17.target=boolean\ inSaved(java.lang.String,\ java.util.ArrayList)
comment17.text=\n\ Checks\ if\ a\ String\ is\ in\ a\ certain\ ArrayList\ of\ strings\n\ @param\ s\ String\ to\ be\ checked\ for\n\ @param\ saved\ ArrayList\ to\ search\ through\n\ @return\ true\ if\ s\ is\ in\ saved\n
comment18.params=
comment18.target=void\ makeWords1()
comment18.text=\n\ Difficulty\ Level\ 1\n\ Creates\ 5,4,\ and\ 3\ letter\ permutations\ of\ the\ 5\ \n\ letter\ String\ letters.\ \n\ MergeSorter\ is\ used\ to\ sort\ these\ lists.\n\ If\ a\ permutation\ is\ a\ word\ in\ the\ dictionary,\ it\ is\ added\ \n\ to\ gameWords.\ \ If\ not,\ it\ is\ thrown\ out.\n\ encrypted\ is\ made\ with\ 3,4,\ and\ 5\ character\ ?\ mark\ \n\ Strings\ to\ match\ the\ length\ of\ gameWords\n
comment19.params=
comment19.target=void\ makeWords2()
comment19.text=\n\ Difficulty\ Level\ 2\n\ Creates\ 6,5,4,\ and\ 3\ letter\ permutations\ of\ the\ 6\ \n\ letter\ String\ letters.\ \n\ MergeSorter\ is\ used\ to\ sort\ these\ lists.\n\ If\ a\ permutation\ is\ a\ word\ in\ the\ dictionary,\ it\ is\ added\ \n\ to\ gameWords.\ \ If\ not,\ it\ is\ thrown\ out.\n\ encrypted\ is\ made\ with\ 3,4,5,\ and\ 6\ character\ ?\ mark\ \n\ Strings\ to\ match\ the\ length\ of\ gameWords\n
comment2.params=
comment2.target=java.lang.String\ getShuffledWord()
comment2.text=\n\ Returns\ a\ copy\ of\ the\ shuffled\ Word\n@return\ shuffledLetters
comment20.params=
comment20.target=void\ makeWords3()
comment20.text=\n\ Difficulty\ Level\ 3\n\ Creates\ 7,\ 6,5,4,\ and\ 3\ letter\ permutations\ of\ the\ 7\ \n\ letter\ String\ letters.\ \n\ MergeSorter\ is\ used\ to\ sort\ these\ lists.\n\ If\ a\ permutation\ is\ a\ word\ in\ the\ dictionary,\ it\ is\ added\ \n\ to\ gameWords.\ \ If\ not,\ it\ is\ thrown\ out.\n\ encrypted\ is\ made\ with\ 3,4,5,6\ and\ 7\ character\ ?\ mark\ \n\ Strings\ to\ match\ the\ length\ of\ gameWords\n
comment21.params=orig
comment21.target=java.lang.String\ rotate(java.lang.String)
comment21.text=\n\ Returns\ a\ string\ that\ is\ a\ rotated\ version\ of\ \n\ the\ inputed\ string.\ ex)\ 1234\ -->\ 2341\n\ @param\ orig\ Original\ String\n\ @return\ str\ Rotated\ String\n
comment22.params=
comment22.target=void\ Tester()
comment3.params=
comment3.target=java.util.ArrayList\ getWords7()
comment3.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ 7\ letter\ words\n@return\ words7
comment4.params=
comment4.target=java.util.ArrayList\ getWords6()
comment4.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ 6\ letter\ words\n@return\ words6
comment5.params=
comment5.target=java.util.ArrayList\ getWords5()
comment5.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ 5\ letter\ words\n@return\ words5
comment6.params=
comment6.target=java.util.ArrayList\ getWords4()
comment6.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ 4\ letter\ words\n@return\ words4
comment7.params=
comment7.target=java.util.ArrayList\ getWords3()
comment7.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ 3\ letter\ words\n@return\ words3
comment8.params=
comment8.target=java.util.ArrayList\ getGameWords()
comment8.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ a\ words\ to\ be\ \n\ used\ in\ the\ Game\n@return\ gameWords
comment9.params=
comment9.target=java.util.ArrayList\ getEncrypted()
comment9.text=\n\ Returns\ a\ copy\ of\ the\ ArrayList\ of\ encrypted\ gameWords\n@return\ encrypted
numComments=23
